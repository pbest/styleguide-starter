/* =================================================================
#  GRID
#  ---------------------
#  This is where you describe what your module does and how to use it.
#  Go forth & code wisely!
#   http://www.sitepoint.com/title-css-simple-approach-css-class-naming/ 
==================================================================== */


/* ========================================================================= */
// Variables
// -------------

// Define your custom responsive grid.
$grid-breakpoints: (
  xs: 0,    // Extra small screen / phone
  sm: 34em, // Small screen / phone
  md: 48em, // Medium screen / tablet
  lg: 62em, // Large screen / desktop
  xl: 75em  // Extra large screen / wide desktop
) !default;

// Number of columns in the grid.
$grid-columns:               12 !default;

// Padding between columns. Gets divided in half for the left and right.
$grid-gutter-width:          1.5rem !default;

// Use flexbox grid?
$enable-flex:               false !default;

// Generate classes for all grid settings
// Disable if you use semantic approach, saves filesize
$enable-grid-classes:       true !default;


// Container sizes
// -----
// Define the maximum width of `.container` for different screen sizes.
$container-max-widths: (
  sm: 34rem,    // 480
  md: 45rem,    // 720
  lg: 60rem,    // 960
  xl: 63rem  // 1140
) !default;



/* ========================================================================= */
// Dependencies
// -------------
@import "grid-system/mixins";
@import "grid-system/breakpoint-functions";
@import "grid-system/grid-framework";
@import "grid-system/grid-flexbox";
@import "grid-system/responsive-utilities";



/* ========================================================================= */
// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.

.guideline-wrapper {
  position: relative;
  margin-top: $grid-gutter-width * 2;
  margin-bottom: $grid-gutter-width * 2;

  padding-top: $grid-gutter-width;
  padding-bottom: $grid-gutter-width * 2;

  background-color: #ffffff;
  border: 1px solid rgba(0,0,0,.1);
  @include make-container(15%);

  // For each breakpoint, define the maximum width of the container in a media query
  @each $breakpoint, $container-max-width in $container-max-widths {
    @include media-breakpoint-up($breakpoint) {
      max-width: $container-max-width;
    }
  }
}

.guideline-section {
  padding-bottom: $grid-gutter-width;
  padding-top: $grid-gutter-width;
  @include make-row();
}

.guideline-header {
  @include make-col;
  @include make-col(12);
}


// Columns
//
// Common styles for small and large grid columns
@if $enable-grid-classes {
  @include make-grid-columns();
}


